{"version":3,"sources":["reducers/index.js","components/PasswordLength.jsx","components/PasswordSettings.jsx","components/GenerateButton.jsx","components/PasswordDisplay.jsx","App.js","store/index.js","index.js"],"names":["passwordSlice","createSlice","name","initialState","length","conditions","numbers","symbols","lowercase","uppercase","password","reducers","changeLength","state","action","payload","changeConditions","changePassword","actions","PasswordLength","useSelector","dispatch","useDispatch","Box","Typography","sx","textAlign","color","fontSize","width","height","backgroundColor","borderRadius","display","justifyContent","alignItems","Slider","min","step","max","defaultValue","onChange","value","target","border","PasswordSettings","handleChange","checked","console","log","marginTop","FormControl","component","FormGroup","alignContent","FormControlLabel","label","labelPlacement","control","Switch","GenerateButton","Button","variant","onClick","Object","values","some","condition","generator","generate","strict","localStorage","setItem","JSON","stringify","marginBottom","PasswordDisplay","useState","open","setOpen","handleTooltipClose","useEffect","pwd","parse","getItem","verifyPwd","ClickAwayListener","onClickAway","Tooltip","PopperProps","disablePortal","onClose","title","placement","arrow","Chip","navigator","clipboard","writeText","innerText","App","margin","flexDirection","store","configureStore","reducer","passwordReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26f5936a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  length: 4,\r\n  conditions: {\r\n    numbers: false,\r\n    symbols: false,\r\n    lowercase: false,\r\n    uppercase: false,\r\n  },\r\n  password: 'PLEASE, SET YOUR PASSWORD SETTINGS',\r\n};\r\n\r\nexport const passwordSlice = createSlice({\r\n  name: 'password',\r\n  initialState,\r\n  reducers: {\r\n    changeLength: (state, action) => {\r\n      state.length = action.payload;\r\n    },\r\n    changeConditions: (state, action) => {\r\n      state.conditions = action.payload;\r\n    },\r\n    changePassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeLength, changeConditions, changePassword } = passwordSlice.actions;\r\nexport default passwordSlice.reducer;\r\n","import React from 'react';\r\nimport { Box, Typography, Slider } from '@mui/material';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeLength } from '../reducers';\r\n\r\nconst PasswordLength = () => {\r\n  const length = useSelector((state) => state.password.length);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography sx={{\r\n        textAlign: 'left',\r\n        color: '#4f5269',\r\n        fontSize: '0.75em',\r\n\r\n      }}>\r\n          LENGTH: {length}\r\n        </Typography>\r\n      <Box sx={{\r\n        width: '330px',\r\n        height: '50px',\r\n        backgroundColor: '#1e223f',\r\n        borderRadius: '5px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}>\r\n        <Slider\r\n          min={4}\r\n          step={1}\r\n          max={32}\r\n          defaultValue={4}\r\n          onChange={({target: { value }}) => dispatch(changeLength(value))}\r\n          sx={{\r\n            width: '280px',\r\n            '& .MuiSlider-thumb': {\r\n              backgroundColor: 'white',\r\n            },\r\n            '& .MuiSlider-track': {\r\n              backgroundColor: '#5e6bda',\r\n              height: '2px',\r\n              border: 'none',\r\n            },\r\n            '& .MuiSlider-rail': {\r\n              backgroundColor: '#4f5269',\r\n              height: '2px',\r\n            }\r\n          }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PasswordLength","import { Box, FormControl, FormControlLabel, FormGroup, Typography, Switch } from '@mui/material';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeConditions } from '../reducers';\r\n\r\nfunction PasswordSettings() {\r\n  const { conditions } = useSelector((state) => state.password)\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({target: { name, checked }}) => {\r\n    console.log(name, checked);\r\n    if (checked) {\r\n      name === 'numbers' && dispatch(changeConditions({...conditions, numbers: true }));\r\n      name === 'symbols' && dispatch(changeConditions({...conditions, symbols: true }));\r\n      name === 'lowercase' && dispatch(changeConditions({...conditions, lowercase: true }));\r\n      name === 'uppercase' && dispatch(changeConditions({...conditions, uppercase: true }));\r\n    } else {\r\n      name === 'numbers' && dispatch(changeConditions({...conditions, numbers: false }));\r\n      name === 'symbols' && dispatch(changeConditions({...conditions, symbols: false }));\r\n      name === 'lowercase' && dispatch(changeConditions({...conditions, lowercase: false }));\r\n      name === 'uppercase' && dispatch(changeConditions({...conditions, uppercase: false }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ marginTop: 2,}}>\r\n      <Typography sx={{\r\n        textAlign: 'left',\r\n        color: '#4f5269',\r\n        fontSize: '0.75em',\r\n\r\n      }}>\r\n        SETTINGS\r\n      </Typography>\r\n      <FormControl component=\"fieldset\" sx={{\r\n        backgroundColor: '#1e223f',\r\n        borderRadius: '5px',\r\n        color: 'white',\r\n        width: '330px',\r\n      }}>\r\n        <FormGroup sx={{ display: 'flex',alignContent: 'center', width: '330px' }}>\r\n          <FormControlLabel\r\n            label=\"Include Numbers\"\r\n            labelPlacement=\"start\"\r\n            control={\r\n              <Switch\r\n                onChange={handleChange}\r\n                name=\"numbers\"\r\n                sx={{\r\n                  '& .MuiSwitch-track': {\r\n                    backgroundColor: '#6e7081',\r\n                  },\r\n                  '& .MuiSwitch-thumb': {\r\n                    backgroundColor: 'white',\r\n                  },\r\n                  '& .css-5ryogn-MuiButtonBase-root-MuiSwitch-switchBase.Mui-checked+.MuiSwitch-track': {\r\n                    backgroundColor: '#5e6bda',\r\n                  }\r\n                }}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Include Symbols\"\r\n            labelPlacement=\"start\"\r\n            control={\r\n              <Switch\r\n                onChange={handleChange}\r\n                name=\"symbols\"\r\n                sx={{\r\n                  '& .MuiSwitch-track': {\r\n                    backgroundColor: '#6e7081',\r\n                  },\r\n                  '& .MuiSwitch-thumb': {\r\n                    backgroundColor: 'white',\r\n                  },\r\n                  '& .css-5ryogn-MuiButtonBase-root-MuiSwitch-switchBase.Mui-checked+.MuiSwitch-track': {\r\n                    backgroundColor: '#5e6bda',\r\n                  }\r\n                }}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Include Lowercase\"\r\n            labelPlacement=\"start\"\r\n            control={\r\n              <Switch\r\n                onChange={handleChange}\r\n                name=\"lowercase\"\r\n                sx={{\r\n                  '& .MuiSwitch-track': {\r\n                    backgroundColor: '#6e7081',\r\n                  },\r\n                  '& .MuiSwitch-thumb': {\r\n                    backgroundColor: 'white',\r\n                  },\r\n                  '& .css-5ryogn-MuiButtonBase-root-MuiSwitch-switchBase.Mui-checked+.MuiSwitch-track': {\r\n                    backgroundColor: '#5e6bda',\r\n                  }\r\n                }}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Include Uppercase\"\r\n            labelPlacement=\"start\"\r\n            control={\r\n              <Switch\r\n                onChange={handleChange}\r\n                name=\"uppercase\"\r\n                sx={{\r\n                  '& .MuiSwitch-track': {\r\n                    backgroundColor: '#6e7081',\r\n                  },\r\n                  '& .MuiSwitch-thumb': {\r\n                    backgroundColor: 'white',\r\n                  },\r\n                  '& .css-5ryogn-MuiButtonBase-root-MuiSwitch-switchBase.Mui-checked+.MuiSwitch-track': {\r\n                    backgroundColor: '#5e6bda',\r\n                  }\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </FormGroup>\r\n      </FormControl>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PasswordSettings;","import { Box,Button } from '@mui/material'\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changePassword } from '../reducers';\r\nimport generator from 'generate-password';\r\n\r\nconst GenerateButton = () => {\r\n  const { length, conditions: { numbers, symbols, lowercase, uppercase }, conditions } = useSelector((state) => state.password);\r\n  const dispatch = useDispatch();\r\n\r\n  const calculatePassword = () => {\r\n    const shouldCalculate = Object.values(conditions).some((condition) => condition === true);\r\n    if (shouldCalculate) {\r\n      console.log('entrou')\r\n      let password = generator.generate({\r\n        length,\r\n        numbers,\r\n        symbols,\r\n        lowercase,\r\n        uppercase,\r\n        strict: true,\r\n      })\r\n      dispatch(changePassword(password));\r\n      localStorage.setItem('password', JSON.stringify(password));\r\n    } else {\r\n      dispatch(changePassword('PLEASE, SET YOUR PASSWORD SETTINGS'));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={calculatePassword}\r\n        sx={{\r\n          width: '330px',\r\n          height: '50px',\r\n          marginTop: 2,\r\n          marginBottom: 2,\r\n          backgroundColor: '#5e6bda',\r\n          color: 'white',\r\n          marginTop: 2,\r\n          marginBottom: 2,\r\n          '&:hover': {\r\n            backgroundColor: '#1e223f',\r\n          }\r\n        }}\r\n      >\r\n        GENERATE PASSWORD\r\n      </Button>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default GenerateButton","import { ClickAwayListener, Tooltip, Chip } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changePassword } from '../reducers';\r\n\r\nconst PasswordDisplay = () => {\r\n  const { password } = useSelector((state) => state.password);\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const PWD = 'PLEASE, SET YOUR PASSWORD SETTINGS';\r\n\r\n  const verifyPwd = () => {\r\n    const pwd = JSON.parse(localStorage.getItem('password'));\r\n    if (pwd?.length > 0) {\r\n      dispatch(changePassword(pwd));\r\n    }\r\n  }\r\n\r\n  const handleTooltipOpen = ({ target }) => (\r\n    navigator.clipboard.writeText(target.innerText),\r\n    setOpen(true)\r\n  )\r\n\r\n  const handleTooltipClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    verifyPwd();\r\n  }, [])\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleTooltipClose}>\r\n      <div>\r\n        <Tooltip\r\n          PopperProps={{\r\n            disablePortal: true,\r\n          }}\r\n          onClose={handleTooltipClose}\r\n          open={open}\r\n          title=\"Copied to clipboard!\"\r\n          placement=\"top\"\r\n          arrow\r\n        >\r\n          <Chip\r\n            onClick={password !== PWD ? handleTooltipOpen : handleTooltipClose}\r\n            variant=\"contained\"\r\n            label={ password }\r\n            sx={{\r\n              width: '330px',\r\n              height: '50px',\r\n              marginTop: 5,\r\n              marginBottom: 2,\r\n              backgroundColor: '#1e223f',\r\n              color: 'white',\r\n              fontSize: '14px',\r\n              '&:hover': {\r\n                backgroundColor: '#5e6bda',\r\n              },\r\n            }}\r\n          />\r\n\r\n        </Tooltip>\r\n      </div>\r\n    </ClickAwayListener>\r\n  )\r\n}\r\n\r\nexport default PasswordDisplay","import { Box, Typography } from '@mui/material';\nimport PasswordLength from './components/PasswordLength';\nimport PasswordSettings from './components/PasswordSettings';\nimport GenerateButton from './components/GenerateButton';\nimport PasswordDisplay from './components/PasswordDisplay';\n\nfunction App() {\n  return (\n    <Box sx={{\n      backgroundColor: '#5e6bda',\n      width: '100vw',\n      height: '100vh',\n      margin: '0',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}>\n      <Box sx={{\n        width: '350px',\n        height: '500px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0b0f2f',\n        borderRadius: '10px',\n      }}>\n        <Typography sx={{ color: 'white', marginTop: 4, fontSize: '20px' }}>Password Generator</Typography>\n        <PasswordDisplay />\n        <PasswordLength />\n        <PasswordSettings />\n        <GenerateButton />\n      </Box>\n    </Box>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport passwordReducer from '../reducers/index';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    password: passwordReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}